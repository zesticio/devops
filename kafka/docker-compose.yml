version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
        - ./zookeeper/data:/var/lib/zookeeper/data
        - ./zookeeper/log:/var/lib/zookeeper/log
    networks:
      - streaming

#  kafka:
#    image: 'confluentinc/kafka'
#    container_name: 'kafka'
#    restart: unless-stopped
#    ports:
#      - "9092:9092"
#    environment:
#      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
#      KAFKA_ADVERTISED_PORT: 9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      #Creating test topics with 10 partitions and 2 replicas
#      KAFKA_CREATE_TOPICS: "test-topics:10:2"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
#      KAFKA_MESSAGE_MAX_BYTES: 10000000
#      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
#      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#  kafka-manager:
#    image: 'sheepkiller/kafka-manager:latest'
#    container_name: 'manager'
#    ports:
#      - "9000:9000"
#    links:
#      - zookeeper
#      - kafka
#    environment:
#      ZK_HOSTS: zookeeper:2181
#      APPLICATION_SECRET: letmein
#      KM_ARGS: -Djava.net.preferIPv4Stack=true

# data will be stored in /var/lib/docker/volumes folder
#volumes:
#  zookeeper_data:
#    driver: local
#  zookeeper_log:
#    driver: local

networks:
  streaming:
    driver: bridge